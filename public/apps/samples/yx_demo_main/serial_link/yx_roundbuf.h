/********************************************************************************
**
**  文件名称:  yx_roundbuf.h
**  版权所有:  CopyRight @ Xiamen Yaxon NetWork CO.LTD. 2019
**  文件描述:  环形缓冲区工具模块
**
*********************************************************************************
**             修改历史记录
**===============================================================================
**| 日期       | 作者   | 修改记录
**===============================================================================
**| 2019-12-11 | 夏普   | 创建本模块
*********************************************************************************/

#ifndef _YX_ROUNDBUF_H_
#define _YX_ROUNDBUF_H_

#include "def.h"

/* ring buffer */
#pragma pack(1)
typedef struct {
    INT8U *buffer_ptr;
    INT32U read_index;
    INT32U write_index;
    INT32U buffer_size;
} yx_roundbuf_t;
#pragma pack()


/* 
 * RingBuffer for DeviceDriver
 *
 * Please note that the ring buffer implementation of RT-Thread
 * has no thread wait or resume feature.
 */

/*******************************************************************
** 函数名:     yx_roundbuf_init
** 功能描述:   环形缓冲区初始化
** 参数:       [in]  rb:            环形缓冲区
**             [in]  pool:          数据缓存指针
**             [in]  size:          缓冲区大小
** 返回:       无
********************************************************************/
void yx_roundbuf_init(yx_roundbuf_t *rb, INT8U *pool, INT16U size);

/*******************************************************************
** 函数名:     yx_roundbuf_put
** 功能描述:   环形缓冲写入数据
** 参数:       [in]  rb:            环形缓冲区
**             [in]  ptr:           数据指针
**             [in]  length:        数据长度
** 返回:       实际写入长度
********************************************************************/
INT32S yx_roundbuf_put(yx_roundbuf_t *rb, const INT8U *ptr, INT16U length);

/*******************************************************************
** 函数名:     yx_roundbuf_put_force
** 功能描述:   环形缓冲写入数据 (若已满则覆盖最旧的数据)
** 参数:       [in]  rb:            环形缓冲区
**             [in]  ptr:           数据指针
**             [in]  length:        数据长度
** 返回:       实际写入长度
** 注意:       调用该接口需要加中断保护
********************************************************************/
INT32S yx_roundbuf_put_force(yx_roundbuf_t *rb, const INT8U *ptr, INT16U length);

/*******************************************************************
** 函数名:     yx_roundbuf_get
** 功能描述:   从环形缓冲区读取数据
** 参数:       [in]  rb:            环形缓冲区
**             [out] ptr:           数据指针
**             [in]  length:        数据长度
** 返回:       实际读取数据长度
********************************************************************/
INT32S yx_roundbuf_get(yx_roundbuf_t *rb, INT8U *ptr, INT16U length);

/*******************************************************************
** 函数名:     yx_roundbuf_putchar
** 功能描述:   向环形缓冲区写入一个字节数据
** 参数:       [in]  rb:            环形缓冲区
**             [in]  ch:            写入的数据
** 返回:       实际写入长度
********************************************************************/
INT32S yx_roundbuf_putchar(yx_roundbuf_t *rb, const INT8U ch);

/*******************************************************************
** 函数名:     yx_roundbuf_putchar_force
** 功能描述:   向环形缓冲区写入一个字节数据 (若已满则覆盖最旧的数据)
** 参数:       [in]  rb:            环形缓冲区
**             [in]  ch:            写入的数据
** 返回:       实际写入长度
** 注意:       调用该接口需要加中断保护
********************************************************************/
INT32S yx_roundbuf_putchar_force(yx_roundbuf_t *rb, const INT8U ch);

/*******************************************************************
** 函数名:     yx_roundbuf_getchar
** 功能描述:   从环形缓冲区读取一个字节数据
** 参数:       [in]  rb:            环形缓冲区
**             [out] ch:            数据指针
** 返回:       实际读出的数据长度
********************************************************************/
INT32S yx_roundbuf_getchar(yx_roundbuf_t *rb, INT8U *ch);

/*******************************************************************
** 函数名:     yx_roundbuf_get_size
** 功能描述:   获取一个环形缓冲区总容量
** 参数:       [in]  rb:            环形缓冲区
** 返回:       容量
********************************************************************/
INT16U yx_roundbuf_get_size(yx_roundbuf_t *rb);

/*******************************************************************
** 函数名:     yx_roundbuf_data_len
** 功能描述:   获取一个环形缓冲区已有数据容量
** 参数:       [in]  rb:            环形缓冲区
** 返回:       已有数据容量
********************************************************************/
INT16U yx_roundbuf_data_len(yx_roundbuf_t *rb);

/*******************************************************************
** 函数名:     yx_roundbuf_space_len
** 功能描述:   获取一个环形缓冲区剩余容量
** 参数:       [in]  rb:            环形缓冲区
** 返回:       剩余容量
********************************************************************/
INT16U yx_roundbuf_space_len(yx_roundbuf_t *rb); 


#endif


