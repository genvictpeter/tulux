/**
@page linux_platform_sdk  Building Yocto Platform SDK

This section has instructions to build a platform SDK using code aurora forum (CAF) / open source

 - These instructions are applicable for QTI Processor builds only, <b>For external APs the platform SDK corresponding to specific external AP would have to be used.</b>

</br>
<b>NOTE:</b> This is not to be confused with the Telematics SDK. The Yocto platform SDK, includes the tool chain, and libraries necessary to be able to develop any program for a given device. It also includes the stub open source libraries for the Telematics SDK, allowing one to develop application using the Telematics SDK's APIs as well.
</br>

You need to have the following in order to proceed:
 - Linux Ubuntu 14.04
 - Install required packages
     \code{.sh}
     $ sudo apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib \
     build-essential chrpath socat libsdl1.2-dev xterm
     \endcode

@section get_started Get Started

- Sync the CAF build

   repo init and sync the sources

   </br>
   For LE.UM.1.3.2 target
   \code{.sh}
   $ repo init -q -u git://codeaurora.org/quic/le/le/manifest.git -b release -m caf_AU_LINUX_EMBEDDED_LE.UM.1.3.2_TARGET_ALL.01.105.149.xml
   $ repo sync -j 32
   //
   // Note: AU_LINUX_EMBEDDED_LE.UM.1.3.2_TARGET_ALL.01.105.149 should be replaced the AU tag
   // corresponding to the desired device build.
   \endcode

   </br>
   For LE.UM.1.3.r5 target
   \code{.sh}
   $ repo init -q -u git://codeaurora.org/quic/le/le/manifest.git -b release -m caf_AU_LINUX_EMBEDDED_LE.UM.1.3.R5_TARGET_ALL.01.66.138.xml
   $ repo sync -j 32
   \endcode

   The tags are listed here - https://source.codeaurora.org/quic/le/le/manifest/refs/?h=IMM.LE.1.0

</br>
- Update Telux and Telephony libs

   Add the following lines at the end of poky/build/conf/local.conf:

   </br>
   For LE.UM.1.3.2 target
   \code{.sh}
   CORE_IMAGE_EXTRA_INSTALL += "telux"
   CORE_IMAGE_EXTRA_INSTALL += "telux-lib"
   \endcode

   </br>
   For LE.UM.1.3.r5 target
   \code{.sh}
   CORE_IMAGE_EXTRA_INSTALL += "telux"
   CORE_IMAGE_EXTRA_INSTALL += "telephony-lib"
   \endcode

</br>
- Setup the build environment

   Source the bitbake environment
   \code{.sh}
   $ cd poky/
   $ source build/conf/set_bb_env.sh
   \endcode

</br>
- Build and install the Yocto Platform SDK

   Run the following command to create a platform sdk
   \code{.sh}
   $ bitbake core-image-minimal -c do_populate_sdk
   \endcode

</br>
- Location of sdk installer script

   After successful compilation, you will have have sdk installer on this location
   \code{.sh}
   poky/build/tmp-glibc/deploy/sdk/oecore-x86_64-cortexa8hf-vfp-neon-toolchain-nodistro.0.sh
   \endcode

*/
